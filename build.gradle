buildscript {
	dependencies {
		classpath "mysql:mysql-connector-java:8.0.17"
		classpath "org.flywaydb:flyway-mysql:8.5.9"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "io.github.divinespear.jpa-schema-generate" version '0.4.0'
	id 'java'
	id "org.flywaydb.flyway" version "8.5.13"
}

group = 'test.gradle'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	gradlePluginPortal()
	maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	implementation 'com.vladmihalcea:hibernate-types-55:2.16.2'
	implementation 'mysql:mysql-connector-java:8.0.17'
	implementation 'org.modelmapper:modelmapper:2.4.5'
	implementation 'org.apache.poi:poi:5.2.2'
	implementation 'org.apache.poi:poi-ooxml:5.2.2'
//	implementation 'com.rabbitmq:amqp-client:5.16.0'
//	implementation 'org.springframework.amqp:spring-amqp:2.4.6'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	classpath 'gradle.plugin.io.github.divinespear:jpa-schema-gradle-plugin'
}

tasks.named('test') {
	useJUnitPlatform()
}

task copyJarToBin (type: Copy){
	from bootJar
	into "D:\\build\\20220525"
}

task migrateDev(type: org.flywaydb.gradle.task.FlywayMigrateTask){
	url = "jdbc:mysql://192.168.150.138:3306/inventory_dev?useSSL=false"
	user = "ops_inv"
	password = "password"
	doLast{
		println "Excuted:" + name
	}
}

generateSchema {
	format = true
	scriptAction = "create"
	vendor = "hibernate+spring"
	databaseProductName = "MySQL"
	databaseMajorVersion = 8
	databaseMinorVersion = 0
	packageToScan = ["ken.ball.inventory.entity"]
	properties = [
		"hibernate.dialect"                                            : "org.hibernate.dialect.MySQL8Dialect",
		"hibernate.implicit_naming_strategy"                           : "org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy",
		"hibernate.physical_naming_strategy"                           : "org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy",
		"hibernate.use_sql_comments"                                   : "true",
	]
}